ggplot(RanksMono16,aes(Rank,TypeofRank))+geom_point()
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank))+geom_point()
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
RanksMonov16
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs))+geom_point()
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
e141_TRTmonocov
monoranksTRT
e141_16calcs <- e141[e141$CountOfSpecies==16&e141$year>2008,]
setDT(e141_16calcs)
e141_TRT16cov <- as.data.frame(e141_16calcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(CO2.Treatment,Nitrogen.Treatment)])
e141_AMB16cov <- as.data.frame(e141_TRT16cov[e141_TRT16cov$CO2.Treatment=="Camb"&e141_TRT16cov$Nitrogen.Treatment=="Namb",])
ranksTRT16 <- data.frame(e141_TRT16cov[,1:2],t(apply(e141_TRT16cov[,colsforrank], 1, rank, ties.method='min')))
ranksTRT16
colnames(ranksTRT16)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_TRT16cov[,colsforrank]),"\\."))[,4],"rank.TRT16",sep=".")
ranksAMB16 <- data.frame(e141_AMB16cov[,1:2],t(apply(e141_AMB16cov[,colsforrank], 1, rank, ties.method='min')))
colnames(ranksAMB16)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_AMB16cov[,colsforrank]),"\\."))[,4],"rank.AMB16",sep=".")
monoranksTRTL <- melt(setDT(monoranksTRT), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
ranksTRT16L <- melt(setDT(ranksTRT16L), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
ranksTRT16L <- melt(setDT(ranksTRT16L), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
ranksTRT16L <- melt(setDT(ranksTRT16), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# RanksMono16 <- rbind(monoranksTRTL,TrtAvgL)
RanksMono16 <- rbind(monoranksTRTL,ranksTRT16L)
RanksMono16
RanksMono16[, paste0("part", 1:3) := tstrsplit(variable, "[.]")]
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(RanksMonov16,aes(TRTMONO,TRT16,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
monoranksTRTL <- melt(setDT(monoranksTRT), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
TrtAvgL
monoranksTRTL <- melt(setDT(monoranksTRT), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
RanksMono16 <- rbind(monoranksTRTL,TrtAvgL)
RanksMono16[, paste0("part", 1:3) := tstrsplit(variable, "[.]")]
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
TrtYearAvg_AMB
# TrtAvg2<-data.frame(TrtAvg)
# rownames(TrtAvg2)<-paste(TrtAvg2$CO2.Treatment,TrtAvg2$Nitrogen.Treatment,sep=".")
# TrtAvg2 <- TrtAvg2[,3:ncol(TrtAvg2)]
# TrtAvg_graph <- data.frame(t(TrtAvg2))
# TrtAvg_graph$Sp <- row.names(TrtAvg_graph)
# row.names(TrtAvg_graph)<-NULL
# TrtAvg_graph_rank <- TrtAvg_graph[grep("rank",TrtAvg_graph$Sp),]
# TrtAvg_graph_rank$Sp <- sapply(strsplit(TrtAvg_graph_rank$Sp,"\\."),`[`, 1)
#
# TrtAvg_graphLONG <- gather(TrtAvg_graph_rank,key="Trt",value="Rank",Cenrich.Nenrich:Camb.Namb)
#
#
# ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
#
TrtAvg2<-data.frame(TrtAvg)
rownames(TrtAvg2)<-paste(TrtAvg2$CO2.Treatment,TrtAvg2$Nitrogen.Treatment,sep=".")
TrtAvg2 <- TrtAvg2[,3:ncol(TrtAvg2)]
TrtAvg_graph <- data.frame(t(TrtAvg2))
TrtAvg_graph$Sp <- row.names(TrtAvg_graph)
row.names(TrtAvg_graph)<-NULL
TrtAvg_graph_rank <- TrtAvg_graph[grep("rank",TrtAvg_graph$Sp),]
TrtAvg_graph_rank$Sp <- sapply(strsplit(TrtAvg_graph_rank$Sp,"\\."),`[`, 1)
TrtAvg_graphLONG <- gather(TrtAvg_graph_rank,key="Trt",value="Rank",Cenrich.Nenrich:Camb.Namb)
ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years (2009-2018) by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years (2009-2018) by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years (2009-2018) by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
TrtYearAvg2<-data.frame(TrtYearAvg)
rownames(TrtYearAvg2)<-paste(TrtYearAvg2$CO2.Treatment,TrtYearAvg2$Nitrogen.Treatment,TrtYearAvg2$year,sep=".")
TrtYearAvg2 <- TrtYearAvg2[,3:ncol(TrtYearAvg2)]
TrtYearAvg_graph <- data.frame(t(TrtYearAvg2))
TrtYearAvg_graph$Sp <- row.names(TrtYearAvg_graph)
row.names(TrtYearAvg_graph)<-NULL
TrtYearAvg_graph_rank <- TrtYearAvg_graph[grep("rank",TrtYearAvg_graph$Sp),]
TrtYearAvg_graph_rank$Sp <- sapply(strsplit(TrtYearAvg_graph_rank$Sp,"\\."),`[`, 1)
TrtYearAvg_graphLONG <- gather(TrtYearAvg_graph_rank,key="TrtYear",value="Rank",Cenrich.Nenrich.1998:Camb.Namb.2018)
TrtYearAvg_graphLONG$YEAR <- as.factor(gsub("\\D", "", TrtYearAvg_graphLONG$TrtYear))
TrtYearAvg_graphLONG$Trt <- as.factor(gsub("\\d", "", TrtYearAvg_graphLONG$TrtYear))
TrtYearAvg_graphLONG$Rank <- as.numeric(TrtYearAvg_graphLONG$Rank)
ggplot(TrtYearAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=YEAR,color=YEAR))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="By Year By Treatment") + facet_wrap(facets="Trt")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = 1998, xmax = 2008, ymin = -Inf, ymax = +Inf, fill = "palegreen", alpha = 0.2)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = 1998, xmax = 2008, ymin = -Inf, ymax = Inf, fill = "palegreen", alpha = 0.2)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
TrtYearAvg_graphLONG$YEAR
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = "1998", xmax = "2008", ymin = -Inf, ymax = Inf, fill = "palegreen", alpha = 0.2)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = "1998", xmax = "2008", ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.2) + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = "1998", xmax = "2008", ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5) + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5) + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5) + facet_wrap(facets="Sp")+theme_classic()
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "grey", alpha = 0.5) + facet_wrap(facets="Sp")+theme_bw()
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5) + facet_wrap(facets="Sp")+theme_bw()
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5) + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5) + facet_wrap(facets="Sp")
TrtYearAvg_graphLONG$YEAR
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+annotate("rect", xmin = -Inf, xmax = 2008, ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5)+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum") + facet_wrap(facets="Sp")
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.5) + facet_wrap(facets="Sp")
monoranksTRTL <- melt(setDT(monoranksTRT), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.3) + facet_wrap(facets="Sp")
e141_TRTmonocov
e141_TRTmonocovL <- melt(setDT(e141_TRTmonocov), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
e141_TRTmonocovL
e141_TRTmonoCOV<- e141_TRTmonocov
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_AMBmonocov[,colsforrank]),"\\."))[,4],"Cover.AMBMONO",sep=".")
colnames(e141_TRTmonoCOV)[3:18]
e141_TRTmonocovL <- melt(setDT(e141_TRTmonoCOV), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# RanksMono16 <- rbind(monoranksTRTL,TrtAvgL)
RanksMono16 <- rbind(e141_TRTmonocovL,TrtAvgL)
RanksMono16[, paste0("part", 1:3) := tstrsplit(variable, "[.]")]
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonocov[,colsforrank]),"\\."))[,4],"Cover.TRTBMONO",sep=".")
e141_TRTmonoCOV<- e141_TRTmonocov
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonocov[,colsforrank]),"\\."))[,4],"Cover.TRTBMONO",sep=".")
e141_TRTmonoCOV<- e141_TRTmonocov
colnames(e141_TRTmonoCOV)[3:18]
colsforrank
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonocov[,colsforrank]),"\\."))[,4],"Cover.TRTMONO",sep=".")
e141_TRTmonoCOV<- as.data.frame(e141_TRTmonocov)
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonocov[,colsforrank]),"\\."))[,4],"Cover.TRTMONO",sep=".")
e141_TRTmonocov
e141_TRTmonoCOV<- e141_TRTmonocov
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonoCOV[,colsforrank]),"\\."))[,4],"Cover.TRTMONO",sep=".")
colnames(e141_TRTmonoCOV[,colsforrank])
e141_TRTmonoCOV
e141_TRTmonoCOV[,colsforrank]
e141_TRTmonoCOV<- as.data.frame(e141_TRTmonocov)
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonoCOV[,colsforrank]),"\\."))[,4],"Cover.TRTMONO",sep=".")
e141_TRTmonocovL <- melt(setDT(e141_TRTmonoCOV), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# RanksMono16 <- rbind(monoranksTRTL,TrtAvgL)
RanksMono16 <- rbind(e141_TRTmonocovL,TrtAvgL)
RanksMono16[, paste0("part", 1:3) := tstrsplit(variable, "[.]")]
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
e141_not16 <- e141[e141$CountOfSpecies!=16,]
e141_not16.1 <- merge(e141_not16,Avg,all.x=T)
e141_not16.2 <- merge(e141_not16.1,TrtAvg,by=c("CO2.Treatment","Nitrogen.Treatment"),all.x=T)
e141_not16.3 <- merge(e141_not16.2,YearAvg,by=c("year"),all.x=T)
e141_not16.4 <- merge(e141_not16.3,TrtAvg_AMB,all.x=T)
e141_not16.5 <- merge(e141_not16.4,TrtYearAvg_AMB,by=c("year"),all.x=T)
e141_fin <- merge(e141_not16.5,TrtYearAvg,by=c("year","CO2.Treatment","Nitrogen.Treatment"),all.x=T)
#make zeros and 1s for multiplying in next step
for(i in colsforrank){
e141_fin[,i] <- ifelse(is.na(e141_fin[,i]),0,1)
}
sp <- c("Achillea",  "Agropyron", "Amorpha", "Andropogon", "Anemone",   "Asclepias", "Bouteloua", "Bromus",   "Koeleria",  "Lespedeza", "Lupinus",   "Petalostemum", "Poa", "Schizachyrium", "Solidago",  "Sorghastrum")
var_type <- c("PropofTotalCov","rank")
avg_types <- c("overallmeanallyrs","Annualmean","trtmeanallyrs","Annualmeanxtrt","trtmeanallyrs.AMBONLY","Annualmeanxtrt.AMBONLY")
e141_fin$ScaledRank_recent10yearRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,c(paste(sp,var_type[2],avg_types[1],sep=c(".")))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[2],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_recent10yearxTrtRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[3],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanxTrtRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[4],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_recent10yearAMBONLYRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[5],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanAMBONLYRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[6],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
ambonly <- e141_fin[e141_fin$CO2.Treatment=="Camb"&e141_fin$Nitrogen.Treatment=="Namb",]
ambonly$Plot <- as.numeric(as.character(ambonly$Plot)) #i do this to calculate the fake treatments below
ambonly$Richness <- ambonly$CountOfSpecies
ambonly$AGB <- ambonly$AbovegroundTotal.Biomass..g.m.2
ambonly$MeanRankrecent10year <- ambonly$ScaledRank_recent10yearAMBONLYRanks
ambonly$MeanRankBYYear <- ambonly$ScaledRank_AnnualMeanAMBONLYRanks
#these are sample variables that you are welcome to play around with
ambonly$PlotLevelTreatment <- ifelse(ambonly$Plot%in%c(unique(ambonly$Plot)[seq(1,40,by=2)]),1,ifelse(ambonly$Plot%in%c(unique(ambonly$Plot)[seq(2,40,by=2)]),2,3)) #varies by plot but not by year
ambonly$YearLevelTreatment <- ifelse(ambonly$year%in%c(unique(ambonly$year)[seq(1,18,by=3)]),1,ifelse(ambonly$year%in%c(unique(ambonly$year)[seq(2,18,by=3)]),2,3)) #varies by year but not by plot
#turning back into a factor for using in random effects
ambonly$Plot <- factor(ambonly$Plot)
e141_fin$Richness <- e141_fin$CountOfSpecies
e141_fin$CO2 <- e141_fin$CO2.Treatment
e141_fin$Ntrt <- e141_fin$Nitrogen.Treatment
e141_fin$MeanRankrecent10year <- e141_fin$ScaledRank_recent10yearRanks
e141_fin$MeanRankBYYear <- e141_fin$ScaledRank_AnnualMeanRanks
e141_fin$MeanRankBYTrtrecent10year <- e141_fin$ScaledRank_recent10yearxTrtRanks
e141_fin$MeanRankBYTrtBYYear <- e141_fin$ScaledRank_AnnualMeanxTrtRanks
hist(e141_fin$MeanRankBYYear)
e141_fin$Richness <- e141_fin$CountOfSpecies
e141_fin$AGB <- e141_fin$AbovegroundTotal.Biomass..g.m.2
for(j in unique(e141_fin$Richness)){
e141_fin$MeanRankrecent10year_levels[e141_fin$Richness==j] <- ifelse(e141_fin$MeanRankrecent10year[e141_fin$Richness==j]<=quantile(e141_fin$MeanRankrecent10year[e141_fin$Richness==j],probs = .33),"LowRank",ifelse(e141_fin$MeanRankrecent10year[e141_fin$Richness==j]<quantile(e141_fin$MeanRankrecent10year[e141_fin$Richness==j],probs=.66),"MedRank","HighRank"))
for(k in unique(e141_fin$C.and.N.treatment)){
e141_fin$MeanRankBYTrtrecent10year_levels[e141_fin$Richness==j&e141_fin$C.and.N.treatment==k] <- ifelse(e141_fin$MeanRankBYTrtrecent10year[e141_fin$Richness==j&e141_fin$C.and.N.treatment==k]<=quantile(e141_fin$MeanRankBYTrtrecent10year[e141_fin$Richness==j&e141_fin$C.and.N.treatment==k],probs = .33),"LowRank",ifelse(e141_fin$MeanRankBYTrtrecent10year[e141_fin$Richness==j&e141_fin$C.and.N.treatment==k]<quantile(e141_fin$MeanRankBYTrtrecent10year[e141_fin$Richness==j&e141_fin$C.and.N.treatment==k],probs=.66),"MedRank","HighRank"))
}
for(i in unique(e141_fin$year)){
e141_fin$MeanRankBYYear_levels[e141_fin$Richness==j&e141_fin$year==i] <- ifelse(e141_fin$MeanRankBYYear[e141_fin$Richness==j&e141_fin$year==i]<=quantile(e141_fin$MeanRankBYYear[e141_fin$Richness==j&e141_fin$year==i],probs = .33),"LowRank",ifelse(e141_fin$MeanRankBYYear[e141_fin$Richness==j&e141_fin$year==i]<quantile(e141_fin$MeanRankBYYear[e141_fin$Richness==j&e141_fin$year==i],probs=.66),"MedRank","HighRank"))
for(k in unique(e141_fin$C.and.N.treatment)){
e141_fin$MeanRankBYTrtBYYear_levels[e141_fin$Richness==j&e141_fin$year==i&e141_fin$C.and.N.treatment==k] <- ifelse(e141_fin$MeanRankBYTrtBYYear[e141_fin$Richness==j&e141_fin$year==i&e141_fin$C.and.N.treatment==k]<=quantile(e141_fin$MeanRankBYTrtBYYear[e141_fin$Richness==j&e141_fin$year==i&e141_fin$C.and.N.treatment==k],probs = .33),"LowRank",ifelse(e141_fin$MeanRankBYTrtBYYear[e141_fin$Richness==j&e141_fin$year==i&e141_fin$C.and.N.treatment==k]<quantile(e141_fin$MeanRankBYTrtBYYear[e141_fin$Richness==j&e141_fin$year==i&e141_fin$C.and.N.treatment==k],probs=.66),"MedRank","HighRank"))
}
}
}
e141_fin$MeanRankrecent10year_levels<-as.factor(e141_fin$MeanRankrecent10year_levels)
e141_fin$MeanRankBYYear_levels<-as.factor(e141_fin$MeanRankBYYear_levels)
e141_fin$MeanRankBYTrtBYYear_levels<-as.factor(e141_fin$MeanRankBYTrtBYYear_levels)
e141_fin$MeanRankBYTrtrecent10year_levels<-as.factor(e141_fin$MeanRankBYTrtrecent10year_levels)
e141_4sp <- e141_fin[e141_fin$CountOfSpecies%in%c(4),]
ggplot(e141_fin,aes(Richness,AbovegroundTotal.Biomass..g.m.2,group=MeanRankrecent10year_levels,color=MeanRankrecent10year_levels))+geom_smooth(method="lm")+facet_wrap("year")
ggplot(e141_4sp,aes(year,MeanRankBYYear,group=Richness,color=factor(Richness)))+geom_point()+geom_smooth(aes(group=Plot),se=F)+facet_grid(C.and.N.treatment~Richness)
ggplot(e141_4sp[e141_4sp$year==2018,],aes(ScaledRank_AnnualMeanAMBONLYRanks,AGB,group=C.and.N.treatment,color=C.and.N.treatment))+geom_point()+geom_smooth(method="lm",se=F)
ggplot(e141_4sp[e141_4sp$year==2018,],aes(MeanRankBYTrtrecent10year,AGB,group=C.and.N.treatment,color=C.and.N.treatment))+geom_point()+geom_smooth(method="lm",se=F)
ggplot(e141_4sp[e141_4sp$year==2018&e141_4sp$MeanRankBYTrtBYYear<9,],aes(MeanRankBYTrtBYYear,AGB,group=Richness,color=factor(Richness)))+geom_point()+geom_smooth(method="lm",se=F)+facet_wrap("C.and.N.treatment")
e141_4sp[e141_4sp$MeanRankBYTrtBYYear>9,]
e141_4sp[e141_4sp$MeanRankBYTrtBYYear>9&e141_4sp$year==2018,]
is.na(propoftotalcov)
rowsum(!is.na(propoftotalcov))
rowSums(!is.na(propoftotalcov))
hist(rowSums(!is.na(propoftotalcov)))
hist(rowSums(is.na(propoftotalcov)))
hist(rowSums(!is.na(propoftotalcov)))
table(rowSums(!is.na(propoftotalcov)))
e141_16[,colsforrank]
table(rowSums(!is.na(e141_16[,colsforrank])))
table(rowSums(is.na(e141_16[,colsforrank])))
hist(e141_4sp$Andropogon.PropofTotalCov)
plot(e141_4sp$Andropogon.PropofTotalCov~e141_4sp$Plot)
plot(e141_4sp$Andropogon.PropofTotalCov~e141_4sp$C.and.N.treatment)
plot(e141_4sp$Andropogon.PropofTotalCov~e141_4sp$MeanRankrecent10year)
ggplot(e141_4sp,aes(Andropogon.PropofTotalCov,MeanRankrecent10year,color=C.and.N.Treatment))+geom_point()
ggplot(e141_4sp,aes(Andropogon.PropofTotalCov,MeanRankrecent10year,color=C.and.N.treatment))+geom_point()
ggplot(e141_4sp,aes(Andropogon.PropofTotalCov,MeanRankBYYear,color=C.and.N.treatment))+geom_point()
ggplot(e141_4sp,aes(Poa.PropofTotalCov,MeanRankrecent10year,color=C.and.N.treatment))+geom_point()
ggplot(e141_4sp,aes(Poa.PropofTotalCov,MeanRankBYYear,color=C.and.N.treatment))+geom_point()
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
modbyyear <- lme(AbovegroundTotal.Biomass..g.m.2 ~ MeanRankrecent10year_levels*CO2*Ntrt,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_4sp[e141_4sp$year==2018,])
summary(modbyyear)$tTable
Anova(modbyyear)
##### this is interesting
modbyyear <- lme(AbovegroundTotal.Biomass..g.m.2 ~ MeanRankBYYear_levels*year+CO2+Ntrt+year,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_4sp)
summary(modbyyear)$tTable
Anova(modbyyear)
modbyyear <- lme(AbovegroundTotal.Biomass..g.m.2 ~ MeanRankrecent10year_levels*CO2*Ntrt,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_4sp[e141_4sp$year==2018,])
summary(modbyyear)$tTable
Anova(modbyyear)
e141_YRTRTmonocov <- as.data.frame(e141_monocalcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(year,CO2.Treatment,Nitrogen.Treatment)])
e141_YRTRTmonocov[,1:3]
monoranksYRTRT <- data.frame(e141_YRTRTmonocov[,1:3],t(apply(e141_TRTmonocov[,colsforrank], 1, rank, ties.method='min')))
######## mono ranks
colsforrank <- c("X..cover.Achillea.millefolium","X..cover.Agropyron.repens", "X..cover.Amorpha.canescens", "X..cover.Andropogon.gerardi", "X..cover.Anemone.cylindrica", "X..cover.Asclepias.tuberosa", "X..cover.Bouteloua.gracilis", "X..cover.Bromus.inermis", "X..cover.Koeleria.cristata","X..cover.Lespedeza.capitata","X..cover.Lupinus.perennis","X..cover.Petalostemum.villosum", "X..cover.Poa.pratensis", "X..cover.Schizachyrium.scoparium", "X..cover.Solidago.rigida", "X..cover.Sorghastrum.nutans")
monoranksYRTRT <- data.frame(e141_YRTRTmonocov[,1:3],t(apply(e141_TRTmonocov[,colsforrank], 1, rank, ties.method='min')))
is.data.table(e141_TRTmonocov)
monoranksYRTRT <- data.frame(e141_YRTRTmonocov[,1:3],t(apply(e141_YRTRTmonocov[,colsforrank], 1, rank, ties.method='min')))
monoranksYRTRT
colnames(monoranksYRTRT)[4:19]<-paste(do.call(rbind,strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\."))[,4],"rank.TRTMONO",sep=".")
colnames(monoranksYRTRT)
colnames(monoranksYRTRT)[4:19]<-paste(do.call(rbind,strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\."))[,4],"rank.MONOYRTRT",sep=".")
monoranksYRTRTL <- melt(setDT(monoranksYRTRT), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
names(monoranksYRTRTL)
colnames(monoranksYRTRTL)[4:5]<-c("Species","Rank")
monoranksYRTRTL<- strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\.")[,4]
monoranksYRTRTL<- paste0(strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\.")[,4])
monoranksYRTRTL$Species
sapply(strsplit(monoranksYRTRTL$Species,"\\."),`[`, 1)
strsplit(monoranksYRTRTL$Species,"\\.")
strsplit(monoranksYRTRTL$Species,"[.]")
monoranksYRTRTL$Species<- sapply(strsplit(as.character(monoranksYRTRTL$Species),"[.]"),`[`, 1)
monoranksYRTRTL$Species
monoranksYRTRTL$Species<- as.factor(sapply(strsplit(as.character(monoranksYRTRTL$Species),"[.]"),`[`, 1))
monoranksYRTRTL$Species
ggplot(monoranksYRTRTL,aes(year,rank,by=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(monoranksYRTRTL,aes(year,Rank,by=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_classic()
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_bw()
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_minimal()
YearAvg
TrtYearAvg
names(TrtYearAvg)
# This is made later on.
TrtYearAvgL <- melt(setDT(TrtYearAvg), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
colnames(TrtYearAvgL )[4:5]<-c("Species","DivRank")
colnames(TrtYearAvgL)
TrtYearAvgL$Species<- as.factor(sapply(strsplit(as.character(TrtYearAvgL$Species),"[.]"),`[`, 1))
TrtYearAvgL$Species
monoranksYRTRTL
e141_monocalcs <- e141[e141$CountOfSpecies==1,]
######## mono ranks
colsforrank <- c("X..cover.Achillea.millefolium","X..cover.Agropyron.repens", "X..cover.Amorpha.canescens", "X..cover.Andropogon.gerardi", "X..cover.Anemone.cylindrica", "X..cover.Asclepias.tuberosa", "X..cover.Bouteloua.gracilis", "X..cover.Bromus.inermis", "X..cover.Koeleria.cristata","X..cover.Lespedeza.capitata","X..cover.Lupinus.perennis","X..cover.Petalostemum.villosum", "X..cover.Poa.pratensis", "X..cover.Schizachyrium.scoparium", "X..cover.Solidago.rigida", "X..cover.Sorghastrum.nutans")
setDT(e141_monocalcs)
e141_TRTmonocov <- as.data.frame(e141_monocalcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(CO2.Treatment,Nitrogen.Treatment)])
##################
##### 26 September 2019 -- Akira suggestion of tracking how different species respond over time in order to see if rare species may become more abundant (or not) due to abiotic conditions
e141_YRTRTmonocov <- as.data.frame(e141_monocalcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(year,CO2.Treatment,Nitrogen.Treatment)])
monoranksYRTRT <- data.frame(e141_YRTRTmonocov[,1:3],t(apply(e141_YRTRTmonocov[,colsforrank], 1, rank, ties.method='min')))
colnames(monoranksYRTRT)[4:19]<-paste(do.call(rbind,strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\."))[,4],"rank.MONOYRTRT",sep=".")
monoranksYRTRTL <- melt(setDT(monoranksYRTRT), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
colnames(monoranksYRTRTL)[4:5]<-c("Species","MonoRank")
monoranksYRTRTL$Species<- as.factor(sapply(strsplit(as.character(monoranksYRTRTL$Species),"[.]"),`[`, 1))
ggplot(monoranksYRTRTL,aes(year,Rank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_minimal()
ggplot(monoranksYRTRTL,aes(year,MonoRank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_minimal()
# This is made later on.
TrtYearAvgL <- melt(setDT(TrtYearAvg), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
colnames(TrtYearAvgL)[4:5]<-c("Species","DivRank")
TrtYearAvgL$Species<- as.factor(sapply(strsplit(as.character(TrtYearAvgL$Species),"[.]"),`[`, 1))
ggplot(TrtYearAvgL,aes(year,DivRank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_minimal()
df <- merge(TrtYearAvgL,monoranksYRTRTL,by=c("year","CO2.Treatment", "Nitrogen.Treatment","Species"))
ggplot(df,aes(DivRank,MonoRank,color+Species))+geom_point()
ggplot(df,aes(DivRank,MonoRank,color=Species))+geom_point()
ggplot(df,aes(DivRank,MonoRank,color=Species))+geom_smooth()
ggplot(df,aes(DivRank,MonoRank,color=Species))+geom_line()
ggplot(df,aes(DivRank,MonoRank,color=Species))+geom_countour()
ggplot(df,aes(DivRank,MonoRank,color=Species))+geom_contour()
df$Trt <- paste(df$CO2.Treatment,df$Nitrogen.Treatment,sep=".")
ggplot(df,aes(DivRank,MonoRank,color=Trt))+facet_wrap("Species")
ggplot(df,aes(DivRank,MonoRank,color=Trt))+facet_wrap("Species")+geom_point()
ggplot(df,aes(DivRank,MonoRank,color=Trt))+facet_wrap("Species")+geom_point()+geom_smooth()
ggplot(df,aes(DivRank,MonoRank,color=Trt))+facet_wrap("Species")+geom_point()+geom_smooth(method="lm")
ggplot(df,aes(DivRank,MonoRank,color=Trt))+facet_wrap("Species",scales="free")+geom_point()+geom_smooth(method="lm")
mod <- lm(DivRank~MonoRank*Species*CO2.Treatment*Nitrogen.Treatment,data=df)
summary(mod)
mod <- lm(DivRank~MonoRank*year*CO2.Treatment*Nitrogen.Treatment,data=df)
summary(mod)
mod <- lm(DivRank~MonoRank*CO2.Treatment*Nitrogen.Treatment,data=df)
summary(mod)
mod <- lm(DivRank~MonoRank*Species*CO2.Treatment*Nitrogen.Treatment,data=df)
summary(mod)
mod <- lm(DivRank~MonoRank*CO2.Treatment*Nitrogen.Treatment,data=df[df$Species=="Amorpha"])
summary(mod)
##Clear all existing data
rm(list=ls())
graphics.off()
library(plyr)
library(nlme)
library(car)
library(ggplot2)
library(data.table)
library(tidyr)
library(fastDummies)
#read in biocon
e141 <- read.csv("/Users/cowl0037/Dropbox/UMN Postdoc/CDR DATA/BioCON Master Harvest_190109_USE.csv")
str(e141)
#only "main" experiment -- no drought or heat, "main" experiment, august, and 1+ sp plots
e141 <- e141[!(e141$Water.trt==1 & e141$Water.Treatment=="H2Oneg") & !(e141$Temp.trt==1 & e141$Temp.Treatment=="HTelv")&e141$Experiment=="M"&e141$Season=="August"&e141$CountOfSpecies>0,]
e141$X..cover.Petalostemum.villosum[e141$Plot==189&e141$year==2017]<-0
#make these factors for random effects (and other reasons)
e141$Plot <- factor(e141$Plot)
e141$Ring <- factor(e141$Ring)
e141$YearFac <- factor(e141$year)
# e141_monocalcs <- e141[e141$CountOfSpecies==1&e141$year>2008,]
e141_monocalcs <- e141[e141$CountOfSpecies==1,]
e141_16calcs <- e141[e141$CountOfSpecies==16&e141$year>2008,]
#i'll be doing the ranks based on % cover here
colsforrank <- c("X..cover.Achillea.millefolium","X..cover.Agropyron.repens", "X..cover.Amorpha.canescens", "X..cover.Andropogon.gerardi", "X..cover.Anemone.cylindrica", "X..cover.Asclepias.tuberosa", "X..cover.Bouteloua.gracilis", "X..cover.Bromus.inermis", "X..cover.Koeleria.cristata","X..cover.Lespedeza.capitata","X..cover.Lupinus.perennis","X..cover.Petalostemum.villosum", "X..cover.Poa.pratensis", "X..cover.Schizachyrium.scoparium", "X..cover.Solidago.rigida", "X..cover.Sorghastrum.nutans")
propoftotalcov <- data.frame(apply(e141[,colsforrank],2,function(x) x/e141$X..cover.Total.Planted.Species))
colnames(propoftotalcov)<-paste(do.call(rbind,strsplit(colnames(e141[,colsforrank]),"\\."))[,4],"PropofTotalCov",sep=".")
# table(rowSums(!is.na(propoftotalcov)))
e141 <- data.frame(e141,propoftotalcov)
e141_16 <- e141[e141$CountOfSpecies==16,]
e141_16$Anemone.cylindrica..g.m.2.[is.na(e141_16$Anemone.cylindrica..g.m.2.)]<-0
e141_16[,colsforrank][is.na(e141_16[,colsforrank])]<-0
table(rowSums(is.na(e141_16[,colsforrank])))
ranks <- data.frame(t(apply(e141_16[,colsforrank], 1, rank, ties.method='min')))#changed average to min 25 March 2019. This makes sense because if they don't exist in a plot that should be a criminal offense to the ranking of a 4 or 9 species plot?
colnames(ranks)<-paste(do.call(rbind,strsplit(colnames(e141_16[,colsforrank]),"\\."))[,4],"rank",sep=".")
# ranks$MinRank <- apply(ranks,1,min)
biocon16 <- data.frame(e141_16,ranks)
ggplot(e141_4sp,aes(Andropogon.PropofTotalCov,MeanRankrecent10year,color=C.and.N.treatment))+geom_point()
ggplot(e141_4sp,aes(Andropogon.PropofTotalCov,MeanRankBYYear,color=C.and.N.treatment))+geom_point()
######## mono ranks
colsforrank <- c("X..cover.Achillea.millefolium","X..cover.Agropyron.repens", "X..cover.Amorpha.canescens", "X..cover.Andropogon.gerardi", "X..cover.Anemone.cylindrica", "X..cover.Asclepias.tuberosa", "X..cover.Bouteloua.gracilis", "X..cover.Bromus.inermis", "X..cover.Koeleria.cristata","X..cover.Lespedeza.capitata","X..cover.Lupinus.perennis","X..cover.Petalostemum.villosum", "X..cover.Poa.pratensis", "X..cover.Schizachyrium.scoparium", "X..cover.Solidago.rigida", "X..cover.Sorghastrum.nutans")
setDT(e141_monocalcs)
e141_TRTmonocov <- as.data.frame(e141_monocalcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(CO2.Treatment,Nitrogen.Treatment)])
##################
##### 26 September 2019 -- Akira suggestion of tracking how different species respond over time in order to see if rare species may become more abundant (or not) due to abiotic conditions
e141_YRTRTmonocov <- as.data.frame(e141_monocalcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(year,CO2.Treatment,Nitrogen.Treatment)])
monoranksYRTRT <- data.frame(e141_YRTRTmonocov[,1:3],t(apply(e141_YRTRTmonocov[,colsforrank], 1, rank, ties.method='min')))
colnames(monoranksYRTRT)[4:19]<-paste(do.call(rbind,strsplit(colnames(e141_YRTRTmonocov[,colsforrank]),"\\."))[,4],"rank.MONOYRTRT",sep=".")
monoranksYRTRTL <- melt(setDT(monoranksYRTRT), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
colnames(monoranksYRTRTL)[4:5]<-c("Species","MonoRank")
monoranksYRTRTL$Species<- as.factor(sapply(strsplit(as.character(monoranksYRTRTL$Species),"[.]"),`[`, 1))
ggplot(monoranksYRTRTL,aes(year,MonoRank,color=Species))+geom_line()+facet_grid(CO2.Treatment~Nitrogen.Treatment)+theme_minimal()
# This is made later on.
TrtYearAvgL <- melt(setDT(TrtYearAvg), id.vars = c("year","CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(4:19))
e141_TRTmonocov
monoranksTRT
e141_AMBmonocov <- as.data.frame(e141_TRTmonocov[e141_TRTmonocov$CO2.Treatment=="Camb"&e141_TRTmonocov$Nitrogen.Treatment=="Namb",])
monoranksTRT <- data.frame(e141_TRTmonocov[,1:2],t(apply(e141_TRTmonocov[,colsforrank], 1, rank, ties.method='min')))
colnames(monoranksTRT)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_TRTmonocov[,colsforrank]),"\\."))[,4],"rank.TRTMONO",sep=".")
monoranksAMB <- data.frame(e141_AMBmonocov[,1:2],t(apply(e141_AMBmonocov[,colsforrank], 1, rank, ties.method='min')))
colnames(monoranksAMB)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_AMBmonocov[,colsforrank]),"\\."))[,4],"rank.AMBMONO",sep=".")
colsforrank <- c("X..cover.Achillea.millefolium","X..cover.Agropyron.repens", "X..cover.Amorpha.canescens", "X..cover.Andropogon.gerardi", "X..cover.Anemone.cylindrica", "X..cover.Asclepias.tuberosa", "X..cover.Bouteloua.gracilis", "X..cover.Bromus.inermis", "X..cover.Koeleria.cristata","X..cover.Lespedeza.capitata","X..cover.Lupinus.perennis","X..cover.Petalostemum.villosum", "X..cover.Poa.pratensis", "X..cover.Schizachyrium.scoparium", "X..cover.Solidago.rigida", "X..cover.Sorghastrum.nutans")
setDT(e141_16calcs)
e141_TRT16cov <- as.data.frame(e141_16calcs[,lapply(.SD,mean,na.rm=T),.SDcols=colsforrank,by=.(CO2.Treatment,Nitrogen.Treatment)])
e141_AMB16cov <- as.data.frame(e141_TRT16cov[e141_TRT16cov$CO2.Treatment=="Camb"&e141_TRT16cov$Nitrogen.Treatment=="Namb",])
ranksTRT16 <- data.frame(e141_TRT16cov[,1:2],t(apply(e141_TRT16cov[,colsforrank], 1, rank, ties.method='min')))
colnames(ranksTRT16)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_TRT16cov[,colsforrank]),"\\."))[,4],"rank.TRT16",sep=".")
ranksAMB16 <- data.frame(e141_AMB16cov[,1:2],t(apply(e141_AMB16cov[,colsforrank], 1, rank, ties.method='min')))
colnames(ranksAMB16)[3:18]<-paste(do.call(rbind,strsplit(colnames(e141_AMB16cov[,colsforrank]),"\\."))[,4],"rank.AMB16",sep=".")
setDT(biocon16)
ImportantColumns <-c("Achillea.rank",  "Agropyron.rank", "Amorpha.rank", "Andropogon.rank", "Anemone.rank",   "Asclepias.rank", "Bouteloua.rank", "Bromus.rank",   "Koeleria.rank",  "Lespedeza.rank", "Lupinus.rank",   "Petalostemum.rank", "Poa.rank", "Schizachyrium.rank", "Solidago.rank",  "Sorghastrum.rank")
# Make calculations of average species Proportion of cover and average species rank.
YearAvg <- biocon16[,lapply(.SD,mean,na.rm=T),.SDcols=ImportantColumns,by=.(year)][, setnames(.SD, ImportantColumns, paste(ImportantColumns, "Annualmean", sep = "."))]
TrtYearAvg <- biocon16[,lapply(.SD,mean,na.rm=T),.SDcols=ImportantColumns,by=.(year,CO2.Treatment,Nitrogen.Treatment)][, setnames(.SD, ImportantColumns, paste(ImportantColumns, "Annualmeanxtrt", sep = "."))]
biocon16_recent10 <- biocon16[biocon16$year>2008,]
TrtAvg <- biocon16_recent10[,lapply(.SD,mean,na.rm=T),.SDcols=ImportantColumns,by=.(CO2.Treatment,Nitrogen.Treatment)][, setnames(.SD, ImportantColumns, paste(ImportantColumns, "trtmeanallyrs", sep = "."))]
Avg <- biocon16_recent10[,lapply(.SD,mean,na.rm=T),.SDcols=ImportantColumns,by=.()][, setnames(.SD, ImportantColumns, paste(ImportantColumns, "overallmeanallyrs", sep = "."))]
TrtAvg_AMB <- TrtAvg[TrtAvg$CO2.Treatment=="Camb"&TrtAvg$Nitrogen.Treatment=="Namb"]
colnames(TrtAvg_AMB)[3:ncol(TrtAvg_AMB)]<- paste(colnames(TrtAvg_AMB)[3:ncol(TrtAvg_AMB)],"AMBONLY",sep=".")
TrtAvg_AMB<-TrtAvg_AMB[,3:ncol(TrtAvg_AMB)]
TrtYearAvg_AMB <- TrtYearAvg[TrtYearAvg$CO2.Treatment=="Camb"&TrtYearAvg$Nitrogen.Treatment=="Namb"]
colnames(TrtYearAvg_AMB)[4:ncol(TrtYearAvg_AMB)]<- paste(colnames(TrtYearAvg_AMB)[4:ncol(TrtYearAvg_AMB)],"AMBONLY",sep=".")
COLUMNSIWANT <- c(1,4:ncol(TrtYearAvg_AMB))
TrtYearAvg_AMB<-TrtYearAvg_AMB[,..COLUMNSIWANT]
#
TrtAvg2<-data.frame(TrtAvg)
rownames(TrtAvg2)<-paste(TrtAvg2$CO2.Treatment,TrtAvg2$Nitrogen.Treatment,sep=".")
TrtAvg2 <- TrtAvg2[,3:ncol(TrtAvg2)]
TrtAvg_graph <- data.frame(t(TrtAvg2))
TrtAvg_graph$Sp <- row.names(TrtAvg_graph)
row.names(TrtAvg_graph)<-NULL
TrtAvg_graph_rank <- TrtAvg_graph[grep("rank",TrtAvg_graph$Sp),]
TrtAvg_graph_rank$Sp <- sapply(strsplit(TrtAvg_graph_rank$Sp,"\\."),`[`, 1)
TrtAvg_graphLONG <- gather(TrtAvg_graph_rank,key="Trt",value="Rank",Cenrich.Nenrich:Camb.Namb)
ggplot(TrtAvg_graphLONG,aes(reorder(Sp,-Rank),Rank,group=Trt,color=Trt,shape=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Species",title="Across all years (2009-2018) by treatmeant")+scale_shape_manual(values=c(15,16,17,18))+scale_color_manual(values=c("black","blue","purple","red"))
TrtYearAvg2<-data.frame(TrtYearAvg)
rownames(TrtYearAvg2)<-paste(TrtYearAvg2$CO2.Treatment,TrtYearAvg2$Nitrogen.Treatment,TrtYearAvg2$year,sep=".")
TrtYearAvg2 <- TrtYearAvg2[,3:ncol(TrtYearAvg2)]
TrtYearAvg_graph <- data.frame(t(TrtYearAvg2))
TrtYearAvg_graph$Sp <- row.names(TrtYearAvg_graph)
row.names(TrtYearAvg_graph)<-NULL
TrtYearAvg_graph_rank <- TrtYearAvg_graph[grep("rank",TrtYearAvg_graph$Sp),]
TrtYearAvg_graph_rank$Sp <- sapply(strsplit(TrtYearAvg_graph_rank$Sp,"\\."),`[`, 1)
TrtYearAvg_graphLONG <- gather(TrtYearAvg_graph_rank,key="TrtYear",value="Rank",Cenrich.Nenrich.1998:Camb.Namb.2018)
TrtYearAvg_graphLONG$YEAR <- as.factor(gsub("\\D", "", TrtYearAvg_graphLONG$TrtYear))
TrtYearAvg_graphLONG$Trt <- as.factor(gsub("\\d", "", TrtYearAvg_graphLONG$TrtYear))
TrtYearAvg_graphLONG$Rank <- as.numeric(TrtYearAvg_graphLONG$Rank)
ggplot(TrtYearAvg_graphLONG,aes(YEAR,Rank,group=Trt,color=Trt))+geom_jitter(size=4,width=0.1)+theme(axis.text.x = element_text(angle = 45, hjust = 1))+labs(y="Average Rank in 16 species Plot",x="Year",title="Average Rank By Year By Treatment, ties method = minimum")+annotate("rect", xmin = -Inf, xmax = "2008", ymin = -Inf, ymax = Inf, fill = "darkblue", alpha = 0.3) + facet_wrap(facets="Sp")
monoranksTRTL <- melt(setDT(monoranksTRT), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
e141_TRTmonoCOV<- as.data.frame(e141_TRTmonocov)
colnames(e141_TRTmonoCOV)[3:18] <- paste(do.call(rbind,strsplit(colnames(e141_TRTmonoCOV[,colsforrank]),"\\."))[,4],"Cover.TRTMONO",sep=".")
e141_TRTmonocovL <- melt(setDT(e141_TRTmonoCOV), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
TrtAvgL <- melt(setDT(TrtAvg), id.vars = c("CO2.Treatment", "Nitrogen.Treatment"), measure.vars = c(3:18))
# RanksMono16 <- rbind(monoranksTRTL,TrtAvgL)
RanksMono16 <- rbind(e141_TRTmonocovL,TrtAvgL)
RanksMono16[, paste0("part", 1:3) := tstrsplit(variable, "[.]")]
colnames(RanksMono16)[4:7] <- c("Rank","Species","Useless","TypeofRank")
ggplot(RanksMono16,aes(Rank,Species,group=TypeofRank,color=TypeofRank))+geom_point()
RanksMonov16 <- dcast(RanksMono16, CO2.Treatment+Nitrogen.Treatment+Species ~ TypeofRank, value.var = "Rank")
ggplot(RanksMonov16,aes(TRTMONO,trtmeanallyrs,color=Species))+geom_point()+facet_grid(CO2.Treatment~Nitrogen.Treatment)
e141_not16 <- e141[e141$CountOfSpecies!=16,]
e141_not16.1 <- merge(e141_not16,Avg,all.x=T)
e141_not16.2 <- merge(e141_not16.1,TrtAvg,by=c("CO2.Treatment","Nitrogen.Treatment"),all.x=T)
e141_not16.3 <- merge(e141_not16.2,YearAvg,by=c("year"),all.x=T)
e141_not16.4 <- merge(e141_not16.3,TrtAvg_AMB,all.x=T)
e141_not16.5 <- merge(e141_not16.4,TrtYearAvg_AMB,by=c("year"),all.x=T)
e141_fin <- merge(e141_not16.5,TrtYearAvg,by=c("year","CO2.Treatment","Nitrogen.Treatment"),all.x=T)
#make zeros and 1s for multiplying in next step
for(i in colsforrank){
e141_fin[,i] <- ifelse(is.na(e141_fin[,i]),0,1)
}
sp <- c("Achillea",  "Agropyron", "Amorpha", "Andropogon", "Anemone",   "Asclepias", "Bouteloua", "Bromus",   "Koeleria",  "Lespedeza", "Lupinus",   "Petalostemum", "Poa", "Schizachyrium", "Solidago",  "Sorghastrum")
var_type <- c("PropofTotalCov","rank")
avg_types <- c("overallmeanallyrs","Annualmean","trtmeanallyrs","Annualmeanxtrt","trtmeanallyrs.AMBONLY","Annualmeanxtrt.AMBONLY")
e141_fin$ScaledRank_recent10yearRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,c(paste(sp,var_type[2],avg_types[1],sep=c(".")))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[2],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_recent10yearxTrtRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[3],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanxTrtRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[4],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_recent10yearAMBONLYRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[5],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
e141_fin$ScaledRank_AnnualMeanAMBONLYRanks <- rowSums(e141_fin[,colsforrank]*e141_fin[,paste(sp,var_type[2],avg_types[6],sep=c("."))],na.rm=T)/e141_fin$CountOfSpecies
ambonly <- e141_fin[e141_fin$CO2.Treatment=="Camb"&e141_fin$Nitrogen.Treatment=="Namb",]
ambonly$Plot <- as.numeric(as.character(ambonly$Plot)) #i do this to calculate the fake treatments below
ambonly$Richness <- ambonly$CountOfSpecies
ambonly$AGB <- ambonly$AbovegroundTotal.Biomass..g.m.2
ambonly$MeanRankrecent10year <- ambonly$ScaledRank_recent10yearAMBONLYRanks
ambonly$MeanRankBYYear <- ambonly$ScaledRank_AnnualMeanAMBONLYRanks
#these are sample variables that you are welcome to play around with
ambonly$PlotLevelTreatment <- ifelse(ambonly$Plot%in%c(unique(ambonly$Plot)[seq(1,40,by=2)]),1,ifelse(ambonly$Plot%in%c(unique(ambonly$Plot)[seq(2,40,by=2)]),2,3)) #varies by plot but not by year
ambonly$YearLevelTreatment <- ifelse(ambonly$year%in%c(unique(ambonly$year)[seq(1,18,by=3)]),1,ifelse(ambonly$year%in%c(unique(ambonly$year)[seq(2,18,by=3)]),2,3)) #varies by year but not by plot
#turning back into a factor for using in random effects
ambonly$Plot <- factor(ambonly$Plot)
e141_fin$Richness <- e141_fin$CountOfSpecies
e141_fin$CO2 <- e141_fin$CO2.Treatment
e141_fin$Ntrt <- e141_fin$Nitrogen.Treatment
e141_fin$MeanRankrecent10year <- e141_fin$ScaledRank_recent10yearRanks
e141_fin$MeanRankBYYear <- e141_fin$ScaledRank_AnnualMeanRanks
e141_fin$MeanRankBYTrtrecent10year <- e141_fin$ScaledRank_recent10yearxTrtRanks
e141_fin$MeanRankBYTrtBYYear <- e141_fin$ScaledRank_AnnualMeanxTrtRanks
library(devtools)
library(HyperProc)
library(caTools)
library(rgdal)
library(raster)
library(sf)
library(ggplot2)
library(gridExtra)
library(parallel)
library(data.table)
imulocations <- "~/Documents/temp_IMULOC/"
imufile <- imu_framecombine(inputlocation = imulocations)
dem.rast <- imu_demcombine(imu=imufile,demfilelocation = "~/Dropbox/UMN Postdoc/Ortho_Proc/DEM 1m/dem_1m_m.bil")
proc_imu <- imu_proc(imufile,coords.epsg = 32615,dem_rast = dem.rast,minAlt_dem_atminIMU = minAlt_dem_atminIMU)
listoffilenums <- sort(unique(as.numeric(gsub("\\D", "",list.files(imulocations)))))
out <- rbindlist(lapply(listoffilenums[1:3],ortho_fun,ProcessedIMU=proc_imu, inputlocation= imulocations, outputlocation=outputs_24Oct, bandtowave = "standard", output = "dataframe",printtofile = F))
ggplot(out,aes(Lon2,Lat2,color=nm540.751))+geom_point()
ggplot(out,aes(Lon2,Lat2,color=nm540.751))+geom_point()
?imu_proc
?imu_proc
#### this can be run repeatedly to update package
setwd("~/Documents/HyperPackage/HyperProc")
devtools::document()
1943/60
#### this can be run repeatedly to update package
setwd("~/Documents/HyperPackage/HyperProc")
devtools::document()
